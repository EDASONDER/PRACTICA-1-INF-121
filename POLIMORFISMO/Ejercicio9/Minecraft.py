
class Bloque:
    def accion(self):
        print("Este bloque no tiene una acciÃ³n definida.")
    
    def colocar(self, orientacion="suelo"):
        print(f"Bloque colocado en el {orientacion}.")
    
    def romper(self):
        print("Este bloque no se puede romper.")


class BloqueCofre(Bloque):
    def __init__(self, capacidad, resistencia, tipo):
        self.capacidad = capacidad
        self.resistencia = resistencia
        self.tipo = tipo
    
    def accion(self):
        print(f"Â¡Abriendo cofre {self.tipo}! Contiene {self.capacidad} espacios. ðŸ“¦")
    
    def romper(self):
        print(f"Â¡Cuidado! Romper este cofre {self.tipo} puede soltar sus items. ðŸ’¥")

class BloqueTnt(Bloque):
    def __init__(self, tipo, daÃ±o):
        self.tipo = tipo
        self.daÃ±o = daÃ±o
    
    def accion(self):
        print(f"Â¡La TNT {self.tipo} explotarÃ¡ en 3 segundos! ðŸ’£")
    
    def romper(self):
        print(f"Â¡BOOM! La TNT {self.tipo} causÃ³ {self.daÃ±o} de daÃ±o. ðŸ’¥")

class BloqueHorno(Bloque):
    def __init__(self, color, capacidadComida):
        self.color = color
        self.capacidadComida = capacidadComida
    
    def accion(self):
        print(f"Â¡Horno {self.color} listo para cocinar {self.capacidadComida} alimentos! ðŸ”¥")
    
    def romper(self):
        print(f"Â¡El horno {self.color} se rompiÃ³ y soltÃ³ carbÃ³n! ðŸªµ")


# a) 2 bloques de cada tipo
cofre1 = BloqueCofre(27, 10, "comÃºn")
cofre2 = BloqueCofre(54, 20, "Ã©pico")
tnt1 = BloqueTnt("normal", 5)
tnt2 = BloqueTnt("mega", 10)
horno1 = BloqueHorno("negro", 3)
horno2 = BloqueHorno("blanco", 6)


# b) Sobrescritura de accion()
print("\n=== Acciones de los bloques ===")
cofre1.accion()  
tnt1.accion()    
horno1.accion()  

# c) Sobrecarga de colocar()
print("\n=== Colocar bloques ===")
cofre1.colocar("suelo")  
tnt1.colocar("pared")   

# d) Sobrescritura de romper()
print("\n=== Romper bloques ===")
cofre2.romper()  
tnt2.romper()    
horno2.romper()  